
.. _ug-sa-simp-environments:

SIMP Environments
-----------------

.. |simp_environments_diagram| image:: ../../images/diagrams/simp_environments.png
   :alt: SIMP Environments diagram

The term "environment" is heavily overloaded when discussing
SIMP, Puppet, DevOps, and IT in general.  We attempt to make the
following distinctions:

|simp_environments_diagram|


A full SIMP "Omni" environment is composed from three corresponding environments:

+----------------+---------------------------------------------------------------+
| Environment    | Description                                                   |
+================+===============================================================+
| **Puppet**     | - The standard concept of "`Puppet environment`_" when        |
|                |   Puppet/PE is operated independently from SIMP.              |
|                | - Acts as a namespace for managing nodes―with its own code,   |
|                |   data, and lookup hierarchy.                                 |
|                | - Sourced (once deployed) from a Puppet environment           |
|                |   directory                                                   |
+----------------+---------------------------------------------------------------+
| **Secondary**  | - Provides SIMP with independently-maintained assets that     |
|                |   support a specific  Puppet environment                      |
|                | - Useful for git-unfriendly files, such as secrets            |
|                |   (e.g., ``keydist/``) and large files distributed by         |
|                |   ``rsync``.                                                  |
|                | - Sourced from a secondary environment directory              |
+----------------+---------------------------------------------------------------+
| **Writable**   | - Puppet environment-specific SIMP data (e.g.,                |
|                |   `simplib::passgen()`_ data), generated by the Puppet Server |
|                | - Data is generated automatically by Puppet functions during  |
|                |   catalog compilation                                         |
|                | - Written to/sourced from the writable environment directory  |
+----------------+---------------------------------------------------------------+

Each environment has an associated directory:

.. rubric:: Puppet environment directory
  :name: Environments-puppet_environment_directory

- A single directory at ``$codedir/environments/<environment_name>``
- Contains the Puppet code and Hiera data needed to manage a
  Puppet environment:

  - site manifest(s), Puppet modules, Hiera data (Hiera 4+), and Hiera
    hierarchy (Hiera 5+).

- Assets can deployed using ``r10k`` or Code Manager:

  - ``r10k deploy`` creates one Puppet environment directory per control
    repository branch.
  - ``r10k puppetfile install`` (using default settings) can be run at the top
    level of a Puppet environment directory
    to deploy its modules from the local ``Puppetfile``.

.. rubric:: Secondary environment directory
  :name: Environments-secondary_environment_directory

SIMP, by default, supplements each Puppet environment with a **Secondary
environment directory**, located on the SIMP server at
``/var/simp/environments/<environment_name>``.

This space holds all static, non-Puppet created files. It is generally used for
large binary items that will be delivered via rsync, and for files that are too
dangerous to add to a version control system. These include things like the
SIMP rsync materials (``rsync/``),  the
:ref:`ug-sa-ga-infrastructure-certificates`
(``site_files/pki_files/files/keydist/``), and the ``krb5`` Puppet module
(``site_files/krb5_files/files/keytabs``).

As you add new Puppet environments, you will need to replicate the appropriate
Secondary directory structure here.


.. NOTE::

   For more information on the SIMP rsync structure, please see
   :ref:`HOWTO Work with the SIMP Rsync Shares`

.. rubric:: Writable environment directory
  :name: Environments-writable_environment_directory

SIMP also maintains **Writable environment directories** in parallel with each
Puppet environment at
``/opt/puppetlabs/server/data/puppetserver/simp/environments/``.
This space holds all non-static, Puppet **Server** created files. It is used
for content that can be generated during catalog compilation, such as
`simplib::passgen()`_ and ``ssh::autokey()``,


.. WARNING::

   You should never need to manually adjust anything in this directory space.


Building on the environments above, it is useful to consider the following
"meta" environments:

+-----------------------+--------------------------------------------------------------+
| Environment           | Description                                                  |
+=======================+==============================================================+
| **SIMP "Omni"         | - The complete combination of Puppet + SIMP Extra            |
| environment**         |   (Secondary + Writable) environments of the same name       |
+-----------------------+--------------------------------------------------------------+
| **SIMP                | - A combined Secondary environment + Writable environment    |
| "Extra" environment** | - (Just the SIMP environments w/o the Puppet environment)    |
+-----------------------+--------------------------------------------------------------+
| **Infrastructure      | - A local site's dedicated internal infrastructure tier      |
| Environment**         | - Exists independently from Puppet                           |
|                       | - Often named something along the lines of "development,"    |
|                       |   "testing, acceptance," "staging," "production", etc.,      |
|                       | - In Puppet circles, this is sometimes referred to an        |
|                       |   infrastructure as an "`application tier`_" or "`permanent  |
|                       |   test environment`_"                                        |
|                       |                                                              |
+-----------------------+--------------------------------------------------------------+

.. rubric:: Scaling considerations for Extra (Secondary and Writable) environment directories

Secondary and Writable environment directories pose a problem for
Puppet scaling:

* Load-balanced compile masters *must* keep the contents of *both* secondary and
  writable environment directories in sync across all compile masters.
* Alternatively, disciplined use of Hiera Eyaml encryption must be used to
  replace all parameters that default to using Writable-environment functions
  like `simplib::passgen()`_.

.. _simplib::passgen(): https://github.com/simp/pupmod-simp-simplib/blob/master/lib/puppet/functions/simplib/passgen.rb
.. _`application tier`: http://garylarizza.com/blog/2014/03/26/random-r10k-workflow-ideas/
.. _`permanent test environment`: https://puppet.com/docs/puppet/latest/environments_about.html#permanent-test-environments
.. _`Puppet environment`: https://puppet.com/docs/puppet/latest/environments_about.html#concept-7885
